name: Znuny_Stable_Container_Images

on:
  push:
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  ORGANIZATION: fr-bez-aosc
  IMAGE_NAME: znuny

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into ${{ env.REGISTRY }} registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract previous Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.IMAGE_NAME }}

      - name: Extract the tag name
        id: extract-tag
        run: echo "GIT_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Extract the tag release from file
        id: extract-release-from-file
        run: |
          RELEASE=$(<znuny/${GITHUB_REF/refs\/tags\//}/release)
          echo "RELEASE=$RELEASE" >> $GITHUB_ENV

      - name: Build and push Docker image
        id: build-and-push-tag
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./znuny/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }}-${{ env.RELEASE }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            ${{ github.ref }}

      - name: Build and push Docker image
        id: build-and-push-latest
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./znuny/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.IMAGE_NAME }}:latest
          labels: |
            ${{ steps.meta.outputs.labels }}
            latest


          # org.opencontainers.image.authors=${{ github.repository_owner }}
          # org.opencontainers.image.created=${{ env.BUILD_DATE }}
          # org.opencontainers.image.description=Created from commit ${{ env.GIT_SHA }} and ref ${{ env.GIT_REF }}
          # org.opencontainers.image.ref.name=${{ env.GIT_REF }}
          # org.opencontainers.image.revision=${{ github.sha }}
          # org.opencontainers.image.source=https://github.com/${{ github.repository }}
          # org.opencontainers.image.version=${{ env.BUILD_VER }}



