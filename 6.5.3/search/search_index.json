{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":""},{"location":"#design","title":"Design","text":"<p>The aim of this project, centered on the znuny application, is to provide a reliable,  high-performance container image for quick and easy production. This image and the various deployment methods provided in the repository  are specifically designed for hosting on a Kubernetes platform.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Local users configuration</li> <li>Support for multiple databases<ul> <li>MariaDB</li> <li>PostgreSQL</li> </ul> </li> <li>Mailing configuration</li> <li>Ldap authentication configuration</li> <li>Log outputs formatted in JSON and configurable between rsyslog and file outputs</li> <li>Configuration of Apache rewrite rules</li> </ul>"},{"location":"helm/deployment/","title":"Deployment","text":"Option Default Description nameOverride {} namespaceOverride {} serviceAccount.create true serviceAccount.annotations {} serviceAccount.name \"\" imagePullSecrets [] restartPolicy Always deploymentStrategy Recreate replicaCount 1 image.repository ghcr.io/mln-nicolas-b/docker-znuny image.tag v6.5.3-1 image.pullPolicy IfNotPresent config config.logs {} config.database config.database.type mysql config.database.host host config.database.port port config.database.name name config.database.user user config.database.password password config.apache config.apache.domain znuny.domain.tld config.apache.rewriteRules {} config.users config.users.admin config.users.admin.name root@localhost config.users.admin.password password config.mails {} config.mails.type external config.mails.host smtp.domain.tld config.mails.port 25 config.mails.user znuny@domain.tld config.mails.password none config.authentications config.authentications.customers config.authentications.customers.backends {} config.authentications.customers.synchronizations {} config.authentications.agents config.authentications.agents.backends {} config.authentications.agents.synchronizations {} config.autoscaling {} config.autoscaling.minReplicas 1 config.autoscaling.maxReplicas 3 config.autoscaling.targetCPUUtilizationPercentage 20 config.autoscaling.targetMemoryUtilizationPercentage 50 config.service config.service.type ClusterIP config.service.port 80 config.ingress config.ingress.enabled false config.ingress.domain znuny.domain.tld config.ingress.annotations [\"kubernetes.io/ingress.class: nginx\"] config.ingress.tls config.ingress.enabled true config.ingress.annotations [\"cert-manager.io/cluster-issuer: letsencrypt-prod\"] config.persistentVolumeClaims [] config.podAnnotations [] config.resources config.resources.limits config.resources.limits.cpu 100m config.resources.limits.memory 128Mi config.resources.requests config.resources.requests.cpu 100m config.resources.requests.memory 128Mi"},{"location":"helm/development/","title":"Development","text":""},{"location":"helm/development/#prerequisites","title":"Prerequisites","text":"<p>K3D is the tool choose to have a local kubernetes development cluster.  </p> <p>Install K3D with the next command :</p> <pre><code>curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash\n</code></pre> <p>Tips</p> <p>Refer to the documentation for other installation methods. Go to K3D documentation </p>"},{"location":"helm/development/#create-a-development-cluster","title":"Create a development cluster","text":"<p>Use the following kind of configuration file of k3d to deploy a cluster.</p> k3d/cluster.yaml<pre><code>apiVersion: k3d.io/v1alpha5\nkind: Simple\nmetadata:\nname: znuny-dev-cluster\nservers: 3\nagents: 3\nkubeAPI:\nhost: \"znuny.domain.tld\"\nhostIP: \"127.0.0.1\"\nhostPort: \"7777\"\nimage: rancher/k3s:v1.26.6-k3s1\ntoken: znunuySecretToken\nsubnet: \"172.30.0.0/16\"\nports:\n- port: 8080:80\nnodeFilters:\n- loadbalancer\noptions:\nk3d:\nwait: true\ntimeout: \"60s\"\ndisableLoadbalancer: false\ndisableImageVolume: false\ndisableRollback: false\nloadbalancer:\nconfigOverrides:\n- settings.workerConnections=2048\nk3s: # options passed on to K3s itself\nextraArgs: # additional arguments passed to the `k3s server|agent` command; same as `--k3s-arg`\n- arg: \"--tls-san=znuny.domain.tld\"\nnodeFilters:\n- server:*\nkubeconfig:\nupdateDefaultKubeconfig: true\nswitchCurrentContext: true\n</code></pre> <p>The default domain used by the development cluster is znuny-dev-cluster. Ensure to add it at the local name resolution in the file /etc/hosts :</p> /etc/hosts<pre><code>127.0.0.1 znuny.domain.tld\n</code></pre> <p>Create the cluster :</p> <pre><code>k3d cluster create -c ./k3d/cluster.yaml\n</code></pre> <p>Delete cluster :</p> <pre><code>k3d cluster delete znuny-dev-cluster\n</code></pre>"},{"location":"helm/overview/","title":"Overview","text":"<p>This Helm chart is designed to manage the deployment of  the container images docker-znuny.</p>"},{"location":"roadmaps/v6.5.3-2/","title":"V6.5.3 2","text":""},{"location":"roadmaps/v6.5.3-2/#catch-app-logs-to-format-them-in-json","title":"Catch app logs to format them in JSON","text":"<ul> <li> - Catch all application logs</li> <li> - Format logs</li> <li> - Write logs in STDOUT</li> <li> - Write logs in a file</li> </ul>"},{"location":"roadmaps/v6.5.3-3/","title":"V6.5.3 3","text":""},{"location":"roadmaps/v6.5.3-3/#integrate-postgresql-to-databases-supported","title":"Integrate PostgreSQL to databases supported","text":"<ul> <li> - Test the docker compose integration</li> <li> - Test the scripts initialization</li> </ul>"},{"location":"roadmaps/v6.5.3-4/","title":"V6.5.3 4","text":""},{"location":"roadmaps/v6.5.3-4/#custom-plugins","title":"Custom plugins","text":"<ul> <li> - Understand the plugins working</li> <li> - Create a method to add custom plugins dynamically</li> <li> - Add the feature to the Helm charts</li> </ul>"},{"location":"roadmaps/v6.5.3-5/","title":"V6.5.3 5","text":""},{"location":"roadmaps/v6.5.3-5/#databases-migrations","title":"Databases migrations","text":"<ul> <li> - Get the dump file from an object storage</li> <li> - Get the dump file from an other database</li> <li> - Get the dump file from the local filesystem</li> <li> - Check the dump file integrity</li> <li> - Check the dump file to ensure the aren't issues about the databases</li> <li> - Inject the dump file into the application database<ul> <li> - Test to MariaDB</li> <li> - Test to PostgreSQL</li> </ul> </li> <li> - Use Kubernetes job to perform the migration :<ul> <li> - From an object storage</li> <li> - From a database</li> <li> - From the local filesystem</li> </ul> </li> </ul> <pre><code>apiVersion: batch/v1\nkind: Job\nmetadata:\nname: znuny-database-to-database-migration\nnamespace: &lt;namespace&gt;\nspec:\ntemplate:\nspec:\ncontainers:\n- name: my-container\nimage: my-image\nenv:\nenvFrom:\n- configMapRef:\nname: &lt;name of the configmap&gt;\ncommand: [\n\"sh\",\n\"-c\",\n\"zcli\",\n\"migration\", \"database\", \"pgsql\",\n\"-h\",\n\"host\",\n\"-p\",\n\"port\",\n\"-n\", \"name\",\n\"-u\",\n\"user\",\n\"-w\",\n\"password\"\n]\nrestartPolicy: Never\n</code></pre>"},{"location":"znuny/commands/","title":"Commands","text":"<p>Zcli is e simple command line interface built to manage the image of Znuny.</p>"},{"location":"znuny/commands/#usage","title":"Usage","text":"<p>Zcli can be used as following :</p> <ul> <li><code>zcli COMMAND</code></li> <li><code>zcli [COMMAND] --help | -h</code></li> <li><code>zcli --version | -v</code></li> </ul>"},{"location":"znuny/commands/#global-commands","title":"Global commands","text":"<p>The are many main commands which can be run :</p> <ul> <li><code>config</code>: Manage the configuration of znuny</li> <li><code>check</code>: Check some features or resources</li> <li><code>download</code>: Download the znuny archive</li> <li><code>init</code>: Initialize the container</li> <li><code>migration</code>: Migrate an existing database from any source to the application database</li> <li><code>run</code>: Run Znuny</li> <li><code>user</code>: Manage users</li> </ul>"},{"location":"znuny/commands/#global-options","title":"Global options","text":"<ul> <li><code>--help</code> ou <code>-h</code>: Show this help</li> <li><code>--version</code> ou <code>-v</code>: Show version number</li> </ul>"},{"location":"znuny/commands/#environment-variables","title":"Environment variables","text":"<p>Zcli is designed to be as dynamic configurable as posible. All features supported can be set with environment variables.  </p> <p>Environement variables availables :</p> <ul> <li><code>ZNUNY_LOG_PATH</code>: The log file path</li> <li><code>ZNUNY_DATABASE_TYPE</code>: The database type (mysql, pgsql)</li> <li><code>ZNUNY_DATABASE_HOST</code>: The database host</li> <li><code>ZNUNY_DATABASE_NAME</code>: The database name</li> <li><code>ZNUNY_DATABASE_USER</code>: The database user</li> <li><code>ZNUNY_DATABASE_PASSWORD</code>: The database password</li> <li><code>ZNUNY_USER_ADMIN_NAME</code>: The admin user name</li> <li><code>ZNUNY_USER_ADMIN_PASSWORD</code>: The admin user password</li> <li><code>ZNUNY_MAILING_TYPE</code>: The mailing type</li> <li><code>ZNUNY_MAILING_HOST</code>: The mailing host</li> <li><code>ZNUNY_MAILING_PORT</code>: The mailing port</li> <li><code>ZNUNY_MAILING_USER</code>: The mailing user</li> <li><code>ZNUNY_MAILING_PASSWORD</code>: The mailing password</li> <li><code>ZNUNY_APACHE_DOMAIN</code>: The application domain</li> <li><code>ZNUNY_APACHE_REWRITE_RULES</code>: A custom rewrite rule</li> <li><code>ZNUNY_CUSTOMER_BACKEND_X</code>: Customers authentication backend</li> <li><code>ZNUNY_CUSTOMER_SYNCHRO_X</code>: Customers authentication synchronization</li> <li><code>ZNUNY_AGENTS_BACKEND_X</code>: Agents authentication backend</li> <li><code>ZNUNY_AGENTS_SYNCHRO_X</code>: Agents authentication synchronization</li> </ul> <p>Info</p> <p>The environment variables ended by <code>_X</code> are variable which can be repeated. The charater <code>X</code> need to be replace by a number between 1 and 9. The use of other number will be ignored.</p> <p>Example</p> compose/znuny.yaml<pre><code>  environment:\nZNUNY_LOG_PATH: /var/log/znuny\nZNUNY_DATABASE_TYPE: pgsql\nZNUNY_DATABASE_HOST: postgresql\nZNUNY_DATABASE_PORT: 5432\nZNUNY_DATABASE_NAME: znuny\nZNUNY_DATABASE_USER: znuny\nZNUNY_DATABASE_PASSWORD: password\nZNUNY_APACHE_DOMAIN: znuny.domain.tld\nZNUNY_APACHE_REWRITE_RULES: |-\nRewriteRule ^/$ https://%{HTTP_HOST}/otrs/customer.pl\nRewriteRule ^/otrs/$ https://%{HTTP_HOST}/otrs/customer.pl\nRewriteRule ^/otrs$ https://%{HTTP_HOST}/otrs/customer.pl\n\nZNUNY_USER_ADMIN_NAME: root@localhost\nZNUNY_USER_ADMIN_PASSWORD: password\nZNUNY_MAILING_TYPE: external\nZNUNY_MAILING_HOST: smpt.domain.tld\nZNUNY_MAILING_PORT: 25\nZNUNY_MAILING_USER: znuny\nZNUNY_MAILING_PASSWORD: password\nZNUNY_CUSTOMER_BACKEND_1: |-\n$$Self-&gt;{AuthModule} = 'Kernel::System::Auth::LDAP';\n$$Self-&gt;{'AuthModule::LDAP::Host'} = 'ldap.example.com';\n$$Self-&gt;{'AuthModule::LDAP::BaseDN'} = 'dc=example,dc=com';\n$$Self-&gt;{'AuthModule::LDAP::UID'} = 'uid';\n$$Self-&gt;{'AuthModule::LDAP::GroupDN'} = 'cn=znuny-allow,ou=posixGroups,dc=example,dc=com';\n$$Self-&gt;{'AuthModule::LDAP::AccessAttr'} = 'memberUid';\n$$Self-&gt;{'AuthModule::LDAP::UserAttr'} = 'UID';\n$$Self-&gt;{'AuthModule::LDAP::UserAttr'} = 'DN';\nZNUNY_CUSTOMER_SYNCHRO_1: |-\n$$Self-&gt;{'AuthSyncModule'} = 'Kernel::System::Auth::Sync::LDAP';\n$$Self-&gt;{'AuthSyncModule::LDAP::Host'} = 'ldap.example.com';\n$$Self-&gt;{'AuthSyncModule::LDAP::BaseDN'} = 'dc=example,dc=com';\n$$Self-&gt;{'AuthSyncModule::LDAP::UID'} = 'uid';\n$$Self-&gt;{'AuthSyncModule::LDAP::SearchUserDN'} = '';\n$$Self-&gt;{'AuthSyncModule::LDAP::SearchUserPw'} = '';\n$$Self-&gt;{'AuthSyncModule::LDAP::AlwaysFilter'} = '';\n$$Self-&gt;{'AuthSyncModule::LDAP::UserSyncMap'} = {\nUserFirstname =&gt; 'givenName',\nUserLastname  =&gt; 'sn',\nUserEmail     =&gt; 'mail',\n};\n\nZNUNY_AGENT_BACKEND_1: |-\n$$Self-&gt;{AuthModule} = 'Kernel::System::Auth::LDAP';\n$$Self-&gt;{'AuthModule::LDAP::Host'} = 'ldap.example.com';\n$$Self-&gt;{'AuthModule::LDAP::BaseDN'} = 'dc=example,dc=com';\n$$Self-&gt;{'AuthModule::LDAP::UID'} = 'uid';\n$$Self-&gt;{'AuthModule::LDAP::GroupDN'} = 'cn=znuny-allow,ou=posixGroups,dc=example,dc=com';\n$$Self-&gt;{'AuthModule::LDAP::AccessAttr'} = 'memberUid';\n$$Self-&gt;{'AuthModule::LDAP::UserAttr'} = 'UID';\n$$Self-&gt;{'AuthModule::LDAP::UserAttr'} = 'DN';\nZNUNY_AGENT_SYNCHRO_1: |-\n$$Self-&gt;{'AuthSyncModule'} = 'Kernel::System::Auth::Sync::LDAP';\n$$Self-&gt;{'AuthSyncModule::LDAP::Host'} = 'ldap.example.com';\n$$Self-&gt;{'AuthSyncModule::LDAP::BaseDN'} = 'dc=example,dc=com';\n$$Self-&gt;{'AuthSyncModule::LDAP::UID'} = 'uid';\n$$Self-&gt;{'AuthSyncModule::LDAP::SearchUserDN'} = '';\n$$Self-&gt;{'AuthSyncModule::LDAP::SearchUserPw'} = '';\n$$Self-&gt;{'AuthSyncModule::LDAP::AlwaysFilter'} = '';\n$$Self-&gt;{'AuthSyncModule::LDAP::UserSyncMap'} = {\nUserFirstname =&gt; 'givenName',\nUserLastname  =&gt; 'sn',\nUserEmail     =&gt; 'mail',\n};\n\nZNUNY_CUSTOM_PLUGINS:\n- plugins\n</code></pre>"},{"location":"znuny/deployment/","title":"Deployment","text":"MinimalMailsLogsApacheUserPluginsCustomersAgents docker-compose.yaml<pre><code>---\nversion: \"3\"\n\nservices:\nznuny:\nimage: ghcr.io/mln-nicolas-b/docker-znuny:6.5.3-1\ncontainer_name: znuny\nhostname: znuny\nenvironment:\nZNUNY_DATABASE_TYPE: mysql\nZNUNY_DATABASE_HOST: mariadb\nZNUNY_DATABASE_PORT: 3306\nZNUNY_DATABASE_NAME: znuny\nZNUNY_DATABASE_USER: znuny\nZNUNY_DATABASE_PASSWORD: password\n</code></pre> docker-compose.yaml<pre><code>---\nversion: \"3\"\n\nservices:\nznuny:\nimage: ghcr.io/mln-nicolas-b/docker-znuny:6.5.3-1\ncontainer_name: znuny\nhostname: znuny\nenvironment:\nZNUNY_DATABASE_TYPE: mysql\nZNUNY_DATABASE_HOST: mariadb\nZNUNY_DATABASE_PORT: 3306\nZNUNY_DATABASE_NAME: znuny\nZNUNY_DATABASE_USER: znuny\nZNUNY_DATABASE_PASSWORD: password\n\nZNUNY_MAILING_TYPE: external\nZNUNY_MAILING_HOST: smpt.domain.tld\nZNUNY_MAILING_PORT: 25\nZNUNY_MAILING_USER: znuny\nZNUNY_MAILING_PASSWORD: password\n</code></pre> docker-compose.yaml<pre><code>---\nversion: \"3\"\n\nservices:\nznuny:\nimage: ghcr.io/mln-nicolas-b/docker-znuny:6.5.3-1\ncontainer_name: znuny\nhostname: znuny\nenvironment:\nZNUNY_DATABASE_TYPE: mysql\nZNUNY_DATABASE_HOST: mariadb\nZNUNY_DATABASE_PORT: 3306\nZNUNY_DATABASE_NAME: znuny\nZNUNY_DATABASE_USER: znuny\nZNUNY_DATABASE_PASSWORD: password\n\nZNUNY_LOG_PATH: /var/log/znuny\n</code></pre> docker-compose.yaml<pre><code>---\nversion: \"3\"\n\nservices:\nznuny:\nimage: ghcr.io/mln-nicolas-b/docker-znuny:6.5.3-1\ncontainer_name: znuny\nhostname: znuny\nenvironment:\nZNUNY_DATABASE_TYPE: mysql\nZNUNY_DATABASE_HOST: mariadb\nZNUNY_DATABASE_PORT: 3306\nZNUNY_DATABASE_NAME: znuny\nZNUNY_DATABASE_USER: znuny\nZNUNY_DATABASE_PASSWORD: password\n\nZNUNY_APACHE_DOMAIN: znuny.domain.tld\nZNUNY_APACHE_REWRITE_RULES: |-\nRewriteRule ^/$ https://%{HTTP_HOST}/otrs/customer.pl\nRewriteRule ^/otrs/$ https://%{HTTP_HOST}/otrs/customer.pl\nRewriteRule ^/otrs$ https://%{HTTP_HOST}/otrs/customer.pl\n</code></pre> docker-compose.yaml<pre><code>---\nversion: \"3\"\n\nservices:\nznuny:\nimage: ghcr.io/mln-nicolas-b/docker-znuny:6.5.3-1\ncontainer_name: znuny\nhostname: znuny\nenvironment:\nZNUNY_DATABASE_TYPE: mysql\nZNUNY_DATABASE_HOST: mariadb\nZNUNY_DATABASE_PORT: 3306\nZNUNY_DATABASE_NAME: znuny\nZNUNY_DATABASE_USER: znuny\nZNUNY_DATABASE_PASSWORD: password\n\nZNUNY_USER_ADMIN_NAME: root@localhost\nZNUNY_USER_ADMIN_PASSWORD: password\n</code></pre> docker-compose.yaml<pre><code>---\nversion: \"3\"\n\nservices:\nznuny:\nimage: ghcr.io/mln-nicolas-b/docker-znuny:6.5.3-1\ncontainer_name: znuny\nhostname: znuny\nenvironment:\nZNUNY_DATABASE_TYPE: mysql\nZNUNY_DATABASE_HOST: mariadb\nZNUNY_DATABASE_PORT: 3306\nZNUNY_DATABASE_NAME: znuny\nZNUNY_DATABASE_USER: znuny\nZNUNY_DATABASE_PASSWORD: password\n\nZNUNY_CUSTOM_PLUGINS:\n- plugin\n</code></pre> docker-compose.yaml<pre><code>---\nversion: \"3\"\n\nservices:\nznuny:\nimage: ghcr.io/mln-nicolas-b/docker-znuny:6.5.3-1\ncontainer_name: znuny\nhostname: znuny\nenvironment:\nZNUNY_DATABASE_TYPE: mysql\nZNUNY_DATABASE_HOST: mariadb\nZNUNY_DATABASE_PORT: 3306\nZNUNY_DATABASE_NAME: znuny\nZNUNY_DATABASE_USER: znuny\nZNUNY_DATABASE_PASSWORD: password\n\nZNUNY_CUSTOMER_BACKEND_1: |-\n$$Self-&gt;{AuthModule} = 'Kernel::System::Auth::LDAP';\n$$Self-&gt;{'AuthModule::LDAP::Host'} = 'ldap.example.com';\n$$Self-&gt;{'AuthModule::LDAP::BaseDN'} = 'dc=example,dc=com';\n$$Self-&gt;{'AuthModule::LDAP::UID'} = 'uid';\n$$Self-&gt;{'AuthModule::LDAP::GroupDN'} = 'cn=znuny-allow,ou=posixGroups,dc=example,dc=com';\n$$Self-&gt;{'AuthModule::LDAP::AccessAttr'} = 'memberUid';\n$$Self-&gt;{'AuthModule::LDAP::UserAttr'} = 'UID';\n$$Self-&gt;{'AuthModule::LDAP::UserAttr'} = 'DN';\nZNUNY_CUSTOMER_SYNCHRO_1: |-\n$$Self-&gt;{'AuthSyncModule'} = 'Kernel::System::Auth::Sync::LDAP';\n$$Self-&gt;{'AuthSyncModule::LDAP::Host'} = 'ldap.example.com';\n$$Self-&gt;{'AuthSyncModule::LDAP::BaseDN'} = 'dc=example,dc=com';\n$$Self-&gt;{'AuthSyncModule::LDAP::UID'} = 'uid';\n$$Self-&gt;{'AuthSyncModule::LDAP::SearchUserDN'} = '';\n$$Self-&gt;{'AuthSyncModule::LDAP::SearchUserPw'} = '';\n$$Self-&gt;{'AuthSyncModule::LDAP::AlwaysFilter'} = '';\n$$Self-&gt;{'AuthSyncModule::LDAP::UserSyncMap'} = {\nUserFirstname =&gt; 'givenName',\nUserLastname  =&gt; 'sn',\nUserEmail     =&gt; 'mail',\n};\n</code></pre> docker-compose.yaml<pre><code>---\nversion: \"3\"\n\nservices:\nznuny:\nimage: ghcr.io/mln-nicolas-b/docker-znuny:6.5.3-1\ncontainer_name: znuny\nhostname: znuny\nenvironment:\nZNUNY_DATABASE_TYPE: mysql\nZNUNY_DATABASE_HOST: mariadb\nZNUNY_DATABASE_PORT: 3306\nZNUNY_DATABASE_NAME: znuny\nZNUNY_DATABASE_USER: znuny\nZNUNY_DATABASE_PASSWORD: password\n\nZNUNY_AGENT_BACKEND_1: |-\n$$Self-&gt;{AuthModule} = 'Kernel::System::Auth::LDAP';\n$$Self-&gt;{'AuthModule::LDAP::Host'} = 'ldap.example.com';\n$$Self-&gt;{'AuthModule::LDAP::BaseDN'} = 'dc=example,dc=com';\n$$Self-&gt;{'AuthModule::LDAP::UID'} = 'uid';\n$$Self-&gt;{'AuthModule::LDAP::GroupDN'} = 'cn=znuny-allow,ou=posixGroups,dc=example,dc=com';\n$$Self-&gt;{'AuthModule::LDAP::AccessAttr'} = 'memberUid';\n$$Self-&gt;{'AuthModule::LDAP::UserAttr'} = 'UID';\n$$Self-&gt;{'AuthModule::LDAP::UserAttr'} = 'DN';\nZNUNY_AGENT_SYNCHRO_1: |-\n$$Self-&gt;{'AuthSyncModule'} = 'Kernel::System::Auth::Sync::LDAP';\n$$Self-&gt;{'AuthSyncModule::LDAP::Host'} = 'ldap.example.com';\n$$Self-&gt;{'AuthSyncModule::LDAP::BaseDN'} = 'dc=example,dc=com';\n$$Self-&gt;{'AuthSyncModule::LDAP::UID'} = 'uid';\n$$Self-&gt;{'AuthSyncModule::LDAP::SearchUserDN'} = '';\n$$Self-&gt;{'AuthSyncModule::LDAP::SearchUserPw'} = '';\n$$Self-&gt;{'AuthSyncModule::LDAP::AlwaysFilter'} = '';\n$$Self-&gt;{'AuthSyncModule::LDAP::UserSyncMap'} = {\nUserFirstname =&gt; 'givenName',\nUserLastname  =&gt; 'sn',\nUserEmail     =&gt; 'mail',\n};\n</code></pre>"},{"location":"znuny/development/","title":"Development","text":""},{"location":"znuny/development/#quick-start","title":"Quick start","text":"<p>The deployment of the development stack is managed with Docker Compose. The global configuration is splited in severals compose manifests which  are located in directory compose.  </p> <p>This method allows you to switch from one file to another to obtain the  desired technical stack.</p> <p>After editing the file docker-compose.yaml, just deploy the stack.</p> <pre><code>docker-compose up -d\n</code></pre>"},{"location":"znuny/overview/","title":"Overview","text":"<p>The entrypoint of the docker image is a unique script. This script is a really command line build to manage all part of  the deployment and his configuration.</p> <p>The main command is <code>zcli run znuny</code>, but it is a command which call  all other command requiered by the deployment process.</p>"}]}